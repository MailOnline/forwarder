#!/usr/bin/env python

import sys, json, os, urllib2, datetime, re, Queue, threading


es_url = sys.argv[1]

class ExitToken:
    pass
exit_token = ExitToken()

q = Queue.Queue(1000)

hostname = os.popen("hostname").read().strip()

def to_event(line):
    try:
        match = re.match(r'.*(\d\d\d\d-\d\d-\d\d[ T]\d\d:\d\d:\d\d.\d+\++\d*).*', line)
        if match:
            timestamp = match.group(1)
        else:
            timestamp = datetime.datetime.now().isoformat()
    except ValueError, e:
        timestamp = datetime.datetime.now().isoformat()
    data = {
        "timestamp": timestamp,
        "host": hostname,
        "message": line.strip(),
    }
    return json.dumps(data)


def sending():
    running = True
    while running:
        count = 1;
        next = q.get(True)
        if next == exit_token:
            break;
        payload = "{\"index\": {}}\n" + next + "\n"
        while not q.empty() and count < 1000:
            next = q.get()
            if next == exit_token:
                running = False
                break;
            payload += "{\"index\": {}}\n" + next + "\n"
            count += 1
        # print payload
        urllib2.urlopen("%s/_bulk" % es_url, payload)

t = threading.Thread(target=sending)
t.daemon = True
t.start()

while 1:
    line = sys.stdin.readline()
    if not line:
        q.put(exit_token)
        break
    q.put(to_event(line))

t.join()
